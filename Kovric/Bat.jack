class Bat {
    
    field int horizontalShift, verticalShift;
    field int width, height;
    field int direction;
    field int counter;
    constructor Bat new(int xBat, int yBat, int widthBat, int heightBat) {
	    let horizontalShift = xBat;
	    let verticalShift = yBat;
	    let width = widthBat;
	    let height = heightBat;
	    let direction = 2;
        let counter = 0;
        do show();
        return this;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method void show() {
        do Screen.setColor(true);
	    do draw();
        return;
    }

    method void draw() {
	    do Screen.drawRectangle(horizontalShift, verticalShift, horizontalShift + width, verticalShift + height);
	    return;
    }

    method void setDirection(int newDirection) {
	    let direction = newDirection;
        return;
    }

    method int getLeft() {
        return horizontalShift;
    }

    method int getRight() {
        return horizontalShift + width;
    }

    method void move() {
        let counter = counter + 1; 
        if (counter < 105) { 
            return;
        }
        let counter = 0;
	    if (direction = 1) {
            do moveTo((horizontalShift + width) + 1, verticalShift, (horizontalShift + width) + 1, verticalShift + height, horizontalShift, horizontalShift + 1, true, -1, 0);
	    } 
	    else {
            do moveTo(horizontalShift - 1, verticalShift, horizontalShift - 1, verticalShift + height, (horizontalShift + width) - 1, horizontalShift + width, false, 1, 511 - width);
        }
        
        return;
    }

    method void moveTo(int x1, int y1, int x2, int y2, int x3, int x4, boolean isDir1, int num, int limit) {
        let horizontalShift = horizontalShift + num;
        if (horizontalShift < limit & isDir1) {
            let horizontalShift = limit;
        }
        else {
            if (horizontalShift > limit & ~isDir1) {
                let horizontalShift = limit;
            }
        }
        
        do Screen.setColor(false);
        do Screen.drawRectangle(x1, y1, x2, y2);
        do Screen.setColor(true);
        do Screen.drawRectangle(x3, y1, x4, y2);
        return;
    }
}